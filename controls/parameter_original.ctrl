#!/bin/bash
# parameter.ctrl
# PARAMETER CONTROL FILE - Project Parameters
# Defines parameters with which to run LIONS
# =========================================================
# Adjust these parameters to run for a particular project

# The LIONS home folder
	export BASE=$PWD # Base folder for ~/LIONS/

# PROJECT -------------------------------------------------
	export PROJECT='sandbox' # Project Name

	export INPUT_LIST="$BASE/controls/input.list" # <libName> <libPath> <group> csv file
	# <libPath> is one of
	#     A) Paired end bam file. '/home/libPath.bam'
	#     B) Sorted paired fastQ files. Comma seperated.
	#        '/home/lib.fq1,/home/lib.fq2'

	export CALLSETTINGS='oncoexaptation'
	# Pre-set TE-initiation classification settings
        # - 'oncoexapatation'  : Detect high abundance TE isoforms
        # - 'transcriptomeANN' : Artifical Neural Network based classifier
        # - 'screenTE'         : High sensitivity, low specificity detection
        # - 'driverTE'         : TE-initiations as main drivers of gene-expression
        # - 'simuOptimal'      : Empirically derived optimal from simulation data (beta)
        # = 'custom'           : Use custom settings defined below

# RESOURCES ----------------------------------------------

	export INDEX='hg19' # Genome resource set to use
	#  Should be a ~/LIONS/resources/<INDEX>/ folder
	#  See README file 'RESOURCE INITIALIZATION' to set up
	#  the folder prior to running LIONS the first time

	export GENESET='refSeq_hg19.ucsc' # Reference Gene Set. UCSC format
	# in ~/LIONS/resources/<INDEX>/annotation/<GENESET>	

	export REPEATMASKER='rm_hg19.ucsc' # RepeatMasker. UCSC format
	# in ~/LIONS/resources/<INDEX>/repeat/<REPEATMASKER>

# SYSTEM --------------------------------------------------
	# For each system you'd like to run LIONS on you can edit
	# one <system>.ctrl file
	export SYSTEMCTRL="$BASE/controls/system.sysctrl"
	source $SYSTEMCTRL

	export RUNID=$(date +%y%m%d_%H%M) # Unique Date Run ID; yymmdd_hhmm

# EAST LION -----------------------------------------------
# Bowtie 2
	# Additional alignment parameters passed on to Tophat2
	export BOWTIE=''

# Tophat 2
	# Alignment Bypass
	# 0: Calculate a new alignment for the input
	# 1: Do not re-calculate the alignment, simply create
	#    symbolic link to the bam file in <input.list> within
	#    the LIONS folder architecture
	export ALIGNBYPASS='1'

	# Inner Read distance [-r]
	# 200 - 75 - 75 = 50
	INREAD='50'

	export ctrlTH2=" $BOWTIE -p $THREADS -r $INREAD --report-secondary-alignments"

# Cufflinks
	# Ab initio (guided) or De Novo assembly?
	export deNovo='1' # 1 = De Novo; 0 = Ab Initio

	# Check that assembly guide GTF file exists if it's being used
	if [ $deNovo == '0' ]
	then
		# Guide file upon which to assemble
		guide="$RESOURCES/annotation/guide.gtf"

		# Check of Guide file doesn't exists; exit
		if [ ! -s $guide ]
		then
		echo " ERROR 5 - Missing resource file"
		echo " Ab initio assembly selected (using a GTF guide -g)"
		echo " but the guide file $guide does not exist or cannot be read"
		echo " check parameter.ctrl and/or initialize a guide file"
		exit 5
		fi
	fi

	#Minimum fragments per transfrag
	# default is 10
	minFrag='--min-frags-per-transfrag 10'

	# Multi-mapping transfrag fragments
	# Default is 0.75;
	multiFrag='--max-multiread-fraction 0.99'

	# Minimum coveraged to attempt 3` trimming
	# Default is 10
	minTrim='--trim-3-avgcov-thresh 5'

	# Minimum Trim dropoff in fraction
	trimDrop='--trim-3-dropoff-frac=0.1'

	# Merge Radius in bp
	# Default is 50 bp
	mergeR='--overlap-radius 50'

	# Multiple Mapping read correction
	# include [-u]
	
	if [ $deNovo == '1' ]
	then # De Novo Assembly
		export ctrlCL2="-u -p $THREADS $minFrag $multiFrag $minTrim $trimDrop $mergeR"
	else # Ab Initio Assembly
		export ctrlCL2="-u -p $THREADS -g $guide"
	fi

# RNAseqPipeline

	# Reference Annotations ( = assembly , unless you know what you're doing)
	export REF='assembly'

	# RNAseq Analysis Quality
		# q = quality cutoff; F bam flags to discard
		# i.e. 'q10.F772'
		# i.e. 'q1.F1796' 
	export QUALITY='q10.F772' 

# Chimeric Read Tool
	# self-contained

# ChimSort

	# Sort Bypass: If a sorted .lions file is already present
	# do you want to re-calcualate the 'initiations'?
	# 0 = Re-calcualte 'initiation' using parameters set below
	# 1 = Don't re-calculate 'initiation' if it exists
	export SORTBYPASS='0'

	# These parameters define what is defined as a 
	# "TE-initiated transcript" and what is exonization/termination are
	# note: See chimSort.R script to see how these are used for sorting
        # in more detail

if [ $CALLSETTINGS == 'custom' ]
then
	# Define call settings manually

	# Number of Chimeric Reads Required (total)
	export crtReads='3' # Variable: <Value below> or 1/20 RPM
	
	# Thread Ratio
	export crtThread='10' # >=
	export crtDownThread='10' # |number| required 

	# RPKM cut-off to consider an exon 'expressed'
	export crtRPKM='1' # >=

	# Contribution of TE to total transcript expression (Exon / TE)
	export crtContribution='0.1' # >=

	# Expression immediatly upstream TE
	export crtUpstreamCover='2' # >=

	# Expression of exons upstream of involved exon
	export crtUpstreamExonCover='1.5' # >=

	# Splice Partner Classification
	# Repeat Rank > 0 AND RepeatExonic
	
	# Final Custom Export String
	export CRT=$( echo $crtReads $crtThread $crtDownThread $crtRPKM $crtContribution $crtUpstreamCover $crtUpstreamExonCover )

elif [ $CALLSETTINGS == 'oncoexaptation' ]
then
	# Oncoexaptation Export String
	export CRT=$( echo '3 10 10 1 0.1 2 1.5' )

elif [ $CALLSETTINGS == 'screenTE' ]
then
	# Screen TE-initiations Export String
	export CRT=$( echo '2 5 5 1 0.05 2 1' )

elif [ $CALLSETTINGS == 'driverTE' ]
then
	# driverTE export string. Same as Oncoexaptation but a higher
	# contribution score (0.75 vs 0.1) required as  the 'driver'
	# of expression.
	export CRT=$( echo '5 10 10 1 0.75 2 1.5' )

elif [ $CALLSETTINGS == 'transcritomeANN' ]
then
	# ANN classifier
	# standard 'onco-exaptation' classification will be done
	# and the ANN classifier is 'on top' of that
	export CRT=$( echo '3 10 10 1 0.1 2 1.5' )

	# ANN model to use (stored in ~/LIONS/resources/ANN
	export ANNMODEL="$RESOURCES/ANN/ANN_Model_160919.Rdata"
	
elif [ $CALLSETTINGS == 'simuOptimal']
then
	# RNAseq Simulation based optima
	# empirically derived for maximization of sensitivity
	# and specificity. Based on simulated data, may be
	# more noisey on real data.
		export CRT=$( echo '1 2 10 2 0.1 2 1.5' )
fi


# WEST LION -----------------------------------------------
# chimGroup.R
	# These parameters define recurrent and specific
	# 'TE initiated' events
	# 
	# The third column of <input.list> defines libraries as one of
	# 1: Control / Normal
	# 2: Experimental / Cancer
	# 3: Other / unused

	# Recurrent Cutoff
	# Must be present in at least this many Group 2 libraries
	export cgGroupRecurrence='1'

	# Specificity Cutoff
	# Must be absent in at least this many Group 1 libraires
	export cgSpecificity='1'

	# chimGroup command string
	export CG=$(echo $cgGroupRecurrence $cgSpecificity)


