#!/bin/bash
# westLion.sh
# 
# USAGE:
#	.westLion.sh
#	ran from lions.sh
#
# Wrapper for processing .lion files
# with a semblence of sanity
#

# CONTROL PANEL -----------------------------------------------------

echo "     ... westLion.sh running"
echo "     Project: $PROJECT"
echo "     Output Directory: $pDIR"
echo ''

# ===================================================================
# CORE SCRIPT========================================================
# ===================================================================
cd $pDIR #./LIONS/projects/<projectName>

# Master Flow Control
## **** To be implemented *****


# PROJECT LIONS FILE ------------------------------------------------

# Initialize a project-wide .lion file: <pLionFile>
	# If it exists, append RUNID
if [ ! -e $PROJECT.lion ]
then
	#No <Project>.lions file exists; initialize it
	pLionFile="$PROJECT.lions"

	echo " $PROJECT.lions does not exist, creating it."

	# Initialize file
	touch $pLionFile

else
	# <Project>.lions exists; initialize new file with RUNID
	pLionFile="$PROJECT.$RUNID.lions"
	
	echo " Previous project file exists."
	echo " Initializing new file $pLionFile"

	touch $pLionFile
fi


# Populate Master LIONS file for this project/run
# Loop through each library in input file
iterN=$(wc -l $INPUT_LIST | cut -f1 -d' ' -)

echo " Populating a Master LIONS file for $PROJECT"
for nLib in $(seq $iterN)
do
	
	# Extract row of entries from input list
	rowN=$(sed -n "$nLib"p $INPUT_LIST)
	# Library Name
	libName=$(echo $rowN | cut -f1 -d' ')

	# Most Recently generated lions file
	recentLion=$(ls -t $libName/*.lion | sed -n 1p)
	
	# If first loop; initialize master output file
	if [ $nLib == '1' ]
	then
		#From the output file generate a header file for the output
		head -n1 $recentLion > $pLionFile
	fi

	# Append filtered list to master list
	echo "     append $libName.lion to $pLionFile"
	sed '1d' $recentLion >> $pLionFile

done

	echo ''

# ChimGroup ---------------------------------------------------------
# Using a the project.lion file look for TE-initiated transcripts
# which are recurrent and specific to a library grouping
# i.e. Cancer Recurrent and Specific Chimera

	# Run ChimGroup Script
	rmStats="$RESOURCES/repeat/rmStats.Rdata" #auto-gen from rm.ucsc

	echo ' ChimGroup'
	echo "     Project: $PROJECT"
	echo "     Lions File: $pLionFile" 
	echo ''
	echo "     --- parameters --- "
	echo "     Recurrence Cutoff # = $cgGroupRecurrence"
	echo "     Specificity Cutoff # = $cgSpecificity"



	echo " Run chimGroup.R"
	echo "   Rscript chimGroup.R $pLionFile $INPUT_LIST $rmStats $CG"

	$lBIN/Rscript $SCRIPTS/ChimericAnalysis/chimGroup.R $pLionFile $INPUT_LIST $rmStats $CG


# UCSC Painter ------------------------------------------------------
# Takes the data generated by LIONS and makes a folder heirarchy
# with symbolic links and the track file to load this to the UCSC



# End of Script *<=D
